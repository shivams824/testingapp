name: Front-End Deployment
  
on:
#   push:
#     branches:
    workflow_run:
      workflows: ["Azure Web App Deployment"]
      types:
        - completed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
       node-version: '16.x'

    - name: Install dependencies and build
      run: |
       cd frontend
       npm install
       npm run build

    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
       app-name: 'pipeline-test-git'
       publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
       package: 'frontend/build'

# name: Build and Deploy

# # env:
# #  AZURE_WEBAPP_NAME: pipeline-test-git
# #  DOTNET_VERSION: '6.0.x'
# #  NODE_VERSION: '16.x'

# # on:
# #  push:
# #    branches:
# #      - master

# # jobs:
# #  build:
# #    runs-on: ubuntu-latest

# #    steps:
# #    - name: Checkout code
# #      uses: actions/checkout@v2

# #    - name: Set up .NET Core
# #      uses: actions/setup-dotnet@v1
# #      with:
# #        dotnet-version: ${{ env.DOTNET_VERSION }}

# #    - name: Set up Node.js
# #      uses: actions/setup-node@v2
# #      with:
# #        node-version: ${{ env.NODE_VERSION }}

# #    - name: Npm clean
# #      run: |
# #        cd frontend
# #        npm cache clean --force

# #    - name: Npm install
# #      run: |
# #        cd frontend
# #        npm install --force

# #   #  - name: Npm run test
# #   #    run: |
# #   #      cd ${{ env.webUISourceDirectory }}
# #   #      npm run test:ci
# #   #    continue-on-error: true

# #   #  - name: Dotnet clean
# #   #    run: |
# #   #      cd Demoapi
# #   #      dotnet clean

# #    - name: Dotnet restore
# #      run: |
# #        cd Demoapi
# #        dotnet restore

# #    - name: Dotnet build
# #      run: |
# #        cd Demoapi
# #        dotnet build --configuration Release

# #    - name: Npm run build
# #      run: |
# #        cd frontend
# #        npm run build

# #    - name: Dotnet publish
# #      run: |
# #        ls
# #        cd Demoapi
# #        ls
# #        dotnet publish --configuration Release --output ./publish
# #       #  working-directory: Demoapi

# #    - name: Upload artifact for deployment job
# #      uses: actions/upload-artifact@v2
# #      with:
# #        name: .net-app
# #        path: ./Demoapi/publish

# #  deploy:
# #    runs-on: ubuntu-latest
# #    needs: build

# #    steps:
# #    - name: Download artifact from build job
# #      uses: actions/download-artifact@v2
# #      with:
# #        name: .net-app

# #    - name: Deploy to Azure Web App
# #      uses: azure/webapps-deploy@v2
# #      with:
# #        app-name: ${{ env.AZURE_WEBAPP_NAME }}
# #        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
# #        package: ./

# name: Deploy DotNet project to Azure Function App

# env:
#   AZURE_WEBAPP_NAME: pipeline-test-git 
#   AZURE_WEBAPP_PACKAGE_PATH: '.'       
#   DOTNET_VERSION: '6.0.x'                 

# on:
#   push:
#     branches: ["master"]
#       # - main


# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: ${{ env.DOTNET_VERSION }}
      
#       - name: Set up dependency caching for faster builds
#         uses: actions/cache@v2
#         with:
#           path: ~/.nuget/packages
#           key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-nuget-
#       - name: Build with dotnet
#         run: |
#           cd Demoapi
#           dotnet build --configuration Release
#         working-directory: ${{env.ROOT_PATH}}

#       - name: dotnet publish
#         run: |
#           cd Demoapi
#           dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
#         working-directory: ${{env.ROOT_PATH}}

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v2
#         with:
#           name: .net-app
#           path: ${{env.DOTNET_ROOT}}/myapp
        

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Development'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v2
#         with:
#           name: .net-app
          

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE}}
#           package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}


# # name: Deploy

# # on:
# #   push:
# #     branches:
# #       - master  

# # jobs:
# #   build:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up Node.js
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: 16  

# #       - name: Install dependencies
# #         run: |
# #           cd frontend
# #           npm install

# #       - name: Build
# #         run: |
# #           cd frontend
# #           npm run build

# #       # - name: Login to Azure
# #       #   uses: azure/login@v1
# #       #   with:
# #       #     creds: ${{ secrets.AZURE_CREDENTIALS }}

# #       # - name: Deploy to Azure
# #       #   uses: azure/webapps-deploy@v2
# #       #   with:
# #       #     app-name: 'pipeline-test-git'
# #       #     package: '.'

# #   deploy:
# #     runs-on: ubuntu-latest
# #     needs: build

# #     steps:
# #     # - name: Download artifact from build job
# #     #   uses: actions/download-artifact@v2
# #     #   with:
# #     #     name: .net-app

# #     - name: Deploy to Azure Web App
# #       uses: azure/webapps-deploy@v2
# #       with:
# #         app-name: pipeline-test-git
# #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
# #         package: ./


